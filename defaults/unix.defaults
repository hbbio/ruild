# ruild default build recipes (Unix/macOS/Linux)
# Edit this file to suit your tools and workflow.
# Placeholders:
#   %<ext> -> "<base><ext>" (e.g. %pdf -> "doc.pdf")
#   %      -> <base>       (e.g. % -> doc.)

# ── Documents (Pandoc, Asciidoctor, TeX) ─────────────────────────────────────
md:        pandoc -N -o %pdf %md
mdhtml:    pandoc -s -o %html %md
mddocx:    pandoc -o %docx %md
mdepub:    pandoc -o %epub %md
mdodt:     pandoc -o %odt %md
mdreveal:  pandoc -t revealjs -s -o %html %md
mdbeamer:  pandoc -t beamer -o %pdf %md
mdman:     pandoc -s -t man -o %man %md
rst:       pandoc -N -o %pdf %rst
adoc:      asciidoctor -o %html %adoc
adocpdf:   asciidoctor-pdf -o %pdf %adoc
tex:       latexmk -pdf -interaction=nonstopmode %tex
texbib:    latexmk -pdf -bibtex -interaction=nonstopmode %tex
texxelatex: xelatex %tex
htmldoc:   wkhtmltopdf %html %pdf
txt:       pandoc -o %pdf %txt

# ── Jupyter / notebooks ──────────────────────────────────────────────────────
ipynbhtml: jupyter nbconvert --to html %ipynb
ipynbpdf:  jupyter nbconvert --to pdf %ipynb
ipynbmd:   jupyter nbconvert --to markdown --output %md %ipynb

# ── Graphs and Diagrams ─────────────────────────────────────────────────────
dot:       dot -Tpng -o %png %dot
dotpdf:    dot -Tpdf -o %pdf %dot
dotsvg:    dot -Tsvg -o %svg %dot
neato:     neato -Tpng -o %png %neato
fdp:       fdp -Tpng -o %png %dot
sfdp:      sfdp -Tpng -o %png %dot
circo:     circo -Tpng -o %png %dot
twopi:     twopi -Tpng -o %png %dot
drawio:    drawio -x -f png -o %png %drawio
drawiosvg: drawio -x -f svg -o %svg %drawio
puml:      plantuml -tpng -o . %puml
pumlsvg:   plantuml -tsvg -o . %puml
pumlpdf:   plantuml -tpdf -o . %puml
mmd:       mmdc -i %mmd -o %png
mmdsvg:    mmdc -i %mmd -o %svg
msc:       mscgen -T png -o %png %msc
graphviz:  dot -Tpng -o %png %graphviz
d2png:     d2 %d2 %png
d2svg:     d2 --theme 200 %d2 %svg
svgtopng:  inkscape %svg -o %png
svgtopdf:  inkscape %svg -o %pdf
svgraster: rsvg-convert -o %png %svg

# ── Plots ───────────────────────────────────────────────────────────────────
gnuplot:   gnuplot -e 'set terminal pngcairo size 1600,900; set output "%png";' %gnuplot
plt:       gnuplot -e 'set terminal pngcairo size 1600,900; set output "%png";' %plt

# ── Programming — compile/build/run common languages ────────────────────────
c:         gcc -Wall %c -o %out
cc:        gcc -Wall %c -o %out
cpp:       g++ -Wall %cpp -o %out
cxx:       g++ -Wall %cxx -o %out
rs:        rustc -O %rs -o %out
rsrun:     rustc %rs -o %out && ./%out
cargo:     cargo build
cargotest: cargo test
go:        go build -o %out %go
gotest:    go test ./...
hs:        ghc -O2 %hs -o %out
ml:        ocamlopt str.cmxa unix.cmxa %ml -o %out
zig:       zig build-exe %zig -O ReleaseFast -fstrip -o %out
nim:       nim c -d:release -o:%out %nim
swift:     swiftc %swift -o %out
kt:        kotlinc %kt -include-runtime -d %out.jar
java:      javac %java
jar:       jar cfe %jar Main %class
scala:     scalac %scala
ts:        deno bundle %ts %js
tsc:       tsc %ts --outFile %js
esbuild:   esbuild %js --bundle --minify --outfile=%min.js
rollup:    rollup %js -c --file %min.js
uglify:    terser %js -o %min.js -mc
node:      node %js
py:        python3 %py
pytest:    pytest -q
sh:        bash %sh
rb:        ruby %rb
pl:        perl %pl
php:       php %php
lua:       lua %lua

# ── Linters / Formatters ────────────────────────────────────────────────────
prettier:  prettier -w %
eslint:    eslint --fix %js
ruff:      ruff check --fix %py
black:     black %py
flake8:    flake8 %py
mypy:      mypy %py
shellcheck: shellcheck %sh > %txt

# ── Data conversion ─────────────────────────────────────────────────────────
csvstats:  xsv stats %csv > %txt
csvsample: xsv sample 100 %csv > %txt
csvcut:    xsv select 1,2,3 %csv > %txt
jsonpretty: jq . %json > %txt
jsonmin:   jq -c . %json > %min.json
yamljson:  yq -o=json %yaml > %json
ymljson:   yq -o=json %yml > %json
jsontoyaml: yq -P %json > %yaml
tomljson:  yq -p=toml -o=json %toml > %json
jsontoml:  yq -p=json -o=toml %json > %toml
sqlitecsv: sqlite3 %sqlite '.headers on' '.mode csv' '.once %csv' 'select * from main;'

# ── Images and media ────────────────────────────────────────────────────────
pngjpg:    magick %png %jpg
jpgpng:    magick %jpg %png
heicjpg:   magick %heic %jpg
jpgwebp:   cwebp -q 90 %jpg -o %webp
webpjpg:   dwebp %webp -o %jpg
wavmp3:    ffmpeg -y -i %wav %mp3
mp3wav:    ffmpeg -y -i %mp3 %wav
movmp4:    ffmpeg -y -i %mov -vcodec h264 -acodec aac %mp4
mp4gif:    ffmpeg -y -i %mp4 -vf fps=12,scale=640:-2:flags=lanczos %gif
gifmp4:    ffmpeg -y -i %gif -movflags faststart -pix_fmt yuv420p %mp4

# ── Archives ────────────────────────────────────────────────────────────────
tar:       tar -cvf %tar %
tgz:       tar -czvf %tgz %
zip:       zip -r %zip %
7z:        7z a %7z %

# ── Security / checksums ────────────────────────────────────────────────────
sha256:    shasum -a 256 % > %txt
gpgsign:   gpg --output %sig --detach-sign %
gpgverify: gpg --verify %sig %

# ── Containers / Cloud ─────────────────────────────────────────────────────-
dockerfile: docker build -f %dockerfile .
compose:   docker compose up -d
tfplan:    terraform plan
tffmt:     terraform fmt -recursive

# ── Misc utilities ─────────────────────────────────────────────────────────
dotenv:    env -i sh -c 'set -a && . %env && env > %txt'
make:      make
