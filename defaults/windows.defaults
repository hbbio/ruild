# ruild default build recipes (Windows)
# Edit this file to suit your tools and workflow.

# Documents (Pandoc, Asciidoctor, TeX)
md: pandoc -N -o %pdf %md
mdhtml: pandoc -s -o %html %md
mddocx: pandoc -o %docx %md
mdreveal: pandoc -t revealjs -s -o %html %md
mdbeamer: pandoc -t beamer -o %pdf %md
rst: pandoc -N -o %pdf %rst
adoc: asciidoctor -o %html %adoc
adocpdf: asciidoctor-pdf -o %pdf %adoc
tex: pdflatex %tex
texxelatex: xelatex %tex
txt: pandoc -o %pdf %txt

# Graphs and Diagrams
dot: dot -Tpng -o %png %dot
dotpdf: dot -Tpdf -o %pdf %dot
dotsvg: dot -Tsvg -o %svg %dot
puml: plantuml -tpng -o . %puml
pumlsvg: plantuml -tsvg -o . %puml
mmd: mmdc -i %mmd -o %png
mmdsvg: mmdc -i %mmd -o %svg
msc: mscgen -T png -o %png %msc
svgpng: inkscape %svg --export-type=png --export-filename=%png
svgpdf: inkscape %svg --export-type=pdf --export-filename=%pdf

# Plots
gnuplot: gnuplot -e "set terminal pngcairo size 1600,900; set output '%png';" %gnuplot
plt: gnuplot -e "set terminal pngcairo size 1600,900; set output '%png';" %plt

# Programming â€” compile/build/run common languages
c: gcc -Wall %c -o %out.exe
cc: gcc -Wall %c -o %out.exe
cpp: g++ -Wall %cpp -o %out.exe
cxx: g++ -Wall %cxx -o %out.exe
rs: rustc -O %rs -o %out.exe
go: go build -o %out.exe %go
hs: ghc -O2 %hs -o %out.exe
ml: ocamlopt str.cmxa unix.cmxa %ml -o %out.exe
nim: nim c -d:release -o:%out.exe %nim
swift: swiftc %swift -o %out.exe
kt: kotlinc %kt -include-runtime -d %out.jar
java: javac %java
scala: scalac %scala
ts: deno bundle %ts %js
js: node %js
py: py %py
ps1: powershell -ExecutionPolicy Bypass -File %ps1
bat: cmd /c %bat
rb: ruby %rb
pl: perl %pl
php: php %php
lua: lua %lua

# Data conversion
jsonpretty: jq . %json > %txt
yamljson: yq -o=json %yaml > %json

# Images and media
pngjpg: magick %png %jpg
jpgwebp: cwebp -q 90 %jpg -o %webp
webpjpg: dwebp %webp -o %jpg
wavmp3: ffmpeg -y -i %wav %mp3
mp3wav: ffmpeg -y -i %mp3 %wav
movmp4: ffmpeg -y -i %mov -vcodec h264 -acodec aac %mp4
mp4gif: ffmpeg -y -i %mp4 -vf fps=12,scale=640:-2:flags=lanczos %gif

# Archives
zip: powershell -NoProfile -Command Compress-Archive -Path % -DestinationPath %zip -Force
tar: tar.exe -cvf %tar %
tgz: tar.exe -czvf %tgz %

# Misc utilities
shellcheck: shellcheck %sh > %txt

